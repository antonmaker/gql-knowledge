### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum ContentRating {
  G
  NC_17
  PG
  PG_13
  R
  UNRATED
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
A local time string (i.e., with no associated timezone) in 24-hr `HH:mm[:ss[.SSS]]` format, e.g. `14:25` or `14:25:06` or `14:25:06.123`.
"""
scalar LocalTime

""""""
type Movie {
  contentRating: ContentRating
  createdAt: String
  createdBy: User
  createdById: String
  description: String
  genre: String
  id: ID!
  likes: Int
  rating: Float
  title: String
  updatedAt: String
}

""""""
input MovieInput {
  contentRating: ContentRating!
  description: String
  genre: String
  likes: Int
  rating: Float
  title: String!
}

type Mutation {
  createMovie(data: MovieInput!): Movie
  deleteMovie(id: ID): Movie
  signIn(email: String!, password: String!): SignInResult!
  signUp(data: SignUpInput!): SignUpResult!
  updateMovie(data: MovieInput!, id: ID): Movie
}

type Query {
  hello(name: String): String!
  me: User
  movie(id: ID!): Movie
  movies: [Movie]
  user(id: ID!): User
  users: [User]
}

type SignInResult {
  sessionToken: String
  user: User
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
}

type SignUpResult {
  user: User!
}

enum SortOrder {
  asc
  desc
}

""""""
type User {
  createdAt: String
  email: String
  id: ID!
  movies: [Movie]
  name: String
  updatedAt: String
}